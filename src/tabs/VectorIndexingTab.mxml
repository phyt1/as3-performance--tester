<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import util.ObjectGeneration;
			import __AS3__.vec.Vector;
			import mx.managers.CursorManager;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			
			import flash.utils.getTimer;
			import r1.deval.D
			
			//credits: http://www.mikechambers.com/blog/2008/09/24/actioscript-3-vector-array-performance-comparison/#more-1540
			
			private var time:Number
			
			[Bindable]
			private var chartDataProvider:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var condition1:String =  'vector'
			private var code1:String =  'var sum:Number = 0;\n' +
										'var len:int = vector.length;\n' +
										'for(var i:int = 0; i < len; i++)\n' +
										'{\n' +
											'sum += vector[i];\n' +
										'};\n';
					
			
			[Bindable]
			private var condition2:String =  'array'
			private var code2:String = 'var sum:Number = 0;\n' +
										'var len:int = array.length;\n' +
										'for(var i:int = 0; i < len; i++)\n' +
										'{\n' +
											'sum += array[i];\n' +
										'};\n';
									    
			private function runStdTest():Number
			{
				var vector:Vector.<Number> = util.ObjectGeneration.generateVector(10000)
				time = getTimer();
				var sum:Number = 0;
				var len:int = vector.length;
				for(var i:int = 0; i < len; i++)
				{
					sum += vector[i];
				}
				return (getTimer() - time);
			}
			
	/////////////////		
			private function runOptTest():Number
			{
				var array:Array = util.ObjectGeneration.generateArray(10000);
				time = getTimer();
				var sum:Number = 0;
				var len:int = array.length;
		
				for(var i:int = 0; i < len; i++)
				{
					sum += array[i];
				}
				return (getTimer() - time);
			}
	
			
			private function run():void
			{
				mx.managers.CursorManager.setBusyCursor()
				var result1:Number = 0
				var result2:Number = 0
				
				var loop:Number =50
				for(var i:int;i<loop;i++)
				{
					result1 += runStdTest()
					result2 += runOptTest()
				}
				
				result1 = (result1/loop)
				result2 = (result2/loop)
				
				standardResult.text	  = result1.toString();
				optimizedResult.text  = result2.toString();
				
				chart.visible = true
				
				chartDataProvider.removeAll()
				chartDataProvider.addItem({label:condition1,value:result1})
				chartDataProvider.addItem({label:condition2,value:result2})
				
				mx.managers.CursorManager.removeBusyCursor()
			}
			
			private function showSource(code:String):void
			{
				mx.controls.Alert.show(code)
			}
		
		]]>
	</mx:Script>
	<mx:Form>
		<mx:FormHeading label="{'Compare performance between ' + condition1 + ' and ' + condition2 + ' over a loop en ms'}"/>
		<mx:Button label="run test" click="run()"/>
		<mx:FormItem label="{condition1}">
			<mx:HBox>
				<mx:TextInput editable="false" id="standardResult"/>
				<mx:LinkButton id="srcStandardResult" label="src" click="showSource(code1)"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="{condition2}">
			<mx:HBox>
				<mx:TextInput editable="false" id="optimizedResult"/>
				<mx:LinkButton id="srcOptimizedResult" label="src" click="showSource(code2)"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
	<mx:SeriesInterpolate id="eff"/>
	<mx:ColumnChart id="chart" visible="false" width="100%" height="100%" dataProvider="{this.chartDataProvider}" showDataTips="true">
            <mx:series>
                <mx:ColumnSeries showDataEffect="{eff}" yField="value"/>
            </mx:series>
            <mx:horizontalAxis>
            	<mx:CategoryAxis categoryField="label"/>
        	</mx:horizontalAxis>
    </mx:ColumnChart>


</mx:VBox>
