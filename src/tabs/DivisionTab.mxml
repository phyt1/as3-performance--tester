<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			
			import flash.utils.getTimer;
			import r1.deval.D

			private var time:Number
			
			[Bindable]
			private var chartDataProvider:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var condition1:String =  'i/2'
			private var code1:String =  'for(var i:int=0;i<10000;i++)\n' +
										'{\n' +
										'	var test:int = i/2;\n' +
										'}\n';
			[Bindable]
			private var condition2:String = 'i*0.5'
			private var code2:String =  'for(var i:int=0;i<10000;i++)\n' +
										'{\n' +
										'	var test:int = i*0.5;\n' +
										'}\n' ;
			[Bindable]
			private var condition3:String  = 'i >> 1'				   
			private var code3:String = 'for(var i:int=0;i<10000;i++)\n' +
										'{\n' +
										'	var test:int = i >> 1;\n' +
										'}\n'  ;
									   
			private function runStdTest():Number
			{
				time = getTimer();
				this.executeCode(code1)
				return (getTimer() - time);
			}
			
			
			private function runOptTest():Number
			{
				time = getTimer();
				this.executeCode(code2)
				return (getTimer() - time);
			}
			
			private function runOpt2Test():Number
			{
				time = getTimer();
				this.executeCode(code3)
				return (getTimer() - time);
			}
			
			
			private function run():void
			{
				var result1:Number = runStdTest()
				var result2:Number = runOptTest()
				var result3:Number = runOpt2Test()
				
				standardResult.text	  = result1.toString();
				optimizedResult.text  = result2.toString();
				optimized2Result.text = result3.toString();
				
				chart.visible = true
				
				chartDataProvider.removeAll()
				chartDataProvider.addItem({label:condition1,value:result1})
				chartDataProvider.addItem({label:condition2,value:result2})
				chartDataProvider.addItem({label:condition3,value:result3})
			}
			
			private function showSource(code:String):void
			{
				mx.controls.Alert.show(code)
			}
			
			private function executeCode( code : String ):void 
		    {
		        try
		        { 
		            var result:Object = D.eval( code );
		        }
		        catch ( e:Error )
		        {
		            mx.controls.Alert.show( "Unable to execute code", "ERROR" );
		        }
		      
		    }

			

		]]>
	</mx:Script>
	<mx:Form>
		<mx:FormHeading label="{'Compare performance between' + condition1 + ', ' + condition2 + 'and ' + condition3 + ' over a loop en ms'}"/>
		<mx:Button label="run test" click="run()"/>
		<mx:FormItem label="{condition1}">
			<mx:HBox>
				<mx:TextInput editable="false" id="standardResult"/>
				<mx:LinkButton id="srcStandardResult" label="src" click="showSource(code1)"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="{condition2}">
			<mx:HBox>
				<mx:TextInput editable="false" id="optimizedResult"/>
				<mx:LinkButton id="srcOptimizedResult" label="src" click="showSource(code2)"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="{condition3}">
			<mx:HBox>
				<mx:TextInput editable="false" id="optimized2Result"/>
				<mx:LinkButton id="srcOptimized2Result" label="src" click="showSource(code3)"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
	<mx:SeriesInterpolate id="eff"/>
	<mx:ColumnChart id="chart" visible="false" width="100%" height="100%" dataProvider="{this.chartDataProvider}" showDataTips="true">
            <mx:series>
                <mx:ColumnSeries showDataEffect="{eff}" yField="value"/>
            </mx:series>
            <mx:horizontalAxis>
            	<mx:CategoryAxis categoryField="label"/>
        	</mx:horizontalAxis>
    </mx:ColumnChart>


</mx:VBox>
